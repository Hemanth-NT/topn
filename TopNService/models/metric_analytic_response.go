// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MetricAnalyticResponse metric analytic response
// swagger:model metricAnalyticResponse
type MetricAnalyticResponse struct {

	// average
	// Required: true
	Average *int64 `json:"average"`

	// metric count
	// Required: true
	MetricCount *int64 `json:"metricCount"`

	// metrickey
	// Required: true
	Metrickey *string `json:"metrickey"`

	// standard deviation
	// Required: true
	StandardDeviation *int64 `json:"standardDeviation"`

	// sum
	// Required: true
	Sum *int64 `json:"sum"`

	// variance
	// Required: true
	Variance *int64 `json:"variance"`
}

// Validate validates this metric analytic response
func (m *MetricAnalyticResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAverage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetricCount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetrickey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStandardDeviation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSum(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVariance(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MetricAnalyticResponse) validateAverage(formats strfmt.Registry) error {

	if err := validate.Required("average", "body", m.Average); err != nil {
		return err
	}

	return nil
}

func (m *MetricAnalyticResponse) validateMetricCount(formats strfmt.Registry) error {

	if err := validate.Required("metricCount", "body", m.MetricCount); err != nil {
		return err
	}

	return nil
}

func (m *MetricAnalyticResponse) validateMetrickey(formats strfmt.Registry) error {

	if err := validate.Required("metrickey", "body", m.Metrickey); err != nil {
		return err
	}

	return nil
}

func (m *MetricAnalyticResponse) validateStandardDeviation(formats strfmt.Registry) error {

	if err := validate.Required("standardDeviation", "body", m.StandardDeviation); err != nil {
		return err
	}

	return nil
}

func (m *MetricAnalyticResponse) validateSum(formats strfmt.Registry) error {

	if err := validate.Required("sum", "body", m.Sum); err != nil {
		return err
	}

	return nil
}

func (m *MetricAnalyticResponse) validateVariance(formats strfmt.Registry) error {

	if err := validate.Required("variance", "body", m.Variance); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MetricAnalyticResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricAnalyticResponse) UnmarshalBinary(b []byte) error {
	var res MetricAnalyticResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

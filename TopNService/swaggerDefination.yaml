swagger: "2.0"
info:
  title: Top N Micorservice
  description: Top N microservice pulls data from different internal service.It expose API's to search/aggregate operation on metrics collected from internal services.
  version: "1.0.0"

basePath: /api/topn
schemes:
- http
- https
paths:
  /v1/pullmetrics:
    get:
      summary: "All Internal service will expose this API.TopN service will consume/pull metrics using this API.(NOTE THIS IS DOCUMENTS IN SAME SWAGGER FILE FOR DEMO PURPOSE BUT THIS SERVICE RUNS ON INTERNAL SERVICES NOT ON TOP N)"
      tags:
        - topn-microservice
      parameters: []
      produces:
      - application/json
      description: |
        All internal service will expose this endpoint. TOP N service will pull metrics from this API exposed by internal services.Reponse of this API will be array of metrics.

        For example:
        ```
        get /api/topn/v1/pushmetrics
        ```

        metric content:
        ```
          [{
             "customerAccount": "M Mobile",
             "eventTime": "Tue May 14 2019 18:11:15 GMT+0530 (India Standard Time)"
             "latitude": "123",
             "longitude": "123",
             "cell": "Bangalore India"
             "metricSource": "a",
             "metricsParam":{
                "metricParam1":"a",
                "metricParam2":"b",
                ...              
              }
          }]
        ```
      responses:
        '200':
          description: Metrics pulled by TOP N service from other internal service.
          schema:
            $ref: "#/definitions/Metrics"
        '404':
          description: Internal service not reachable.
          schema:
            $ref: "#/definitions/Error"
        '500':
          description: Internal server error.
          schema:
            $ref: "#/definitions/Error"
            
  /v1/gettopn:
    post:
      summary: To fetch TOP N information based on the statistical operation on metrics collected from internal services.
      description: |
       For example metrics collected from service 1 are  below 
       ```
       [
       {
        "customerAccount": "M Mobile",
        "eventTime": "Tue May 14 2019 18:11:15 GMT+0530 (India Standard Time)"
        "latitude": "123",
        "longitude": "123",
        "cell": "Bangalore India"
        "metricSource": "Internal Service A",
        "metricsParam":{
          "cpuUsage":"90"
        }  
      
       }
       
       {
        "customerAccount": "P Mobile",
        "eventTime": "Tue May 14 2019 18:11:15 GMT+0530 (India Standard Time)"
        "latitude": "129",
        "longitude": "723",
        "cell": "Bangalore India"
        "metricSource": "Internal Service A",
        "metricsParam":{
          "cpuUsage":"50"
        }  
      
       }
       
       ]
       
       And user want to know top 1 CPU consuming customer Account then it should result in.
       
       customerAccount= "P Mobile"
       ```
        For example:
        ```
        POST /api/topn/v1/gettopn
        ```
        Sample request body will be :
        ```
          {
            metrickey:"cpuUsage",
            filterCriteria:{
              list:[{attributeName:"",
                attributeValue:"",
                operator:""
              }],
              relational:[{attributeName:"",
                attributeValue:"",
                operator:""
              }],
              rangeCriteria:[
                {attributeName:"",
                attributeValue:"",
                operator:""
              }]
            },
            topValueCount:1000,
            pageSize:100,
            pageNo:1
          }
        ```
        Sample response body will be :
        ```
        
        {
          topNMetrics :[
              {
            metrickey:"cpuUsage",
            metricValue:"100",
          }...
            ],
          nextPage :{
            metrickey :"cpuUsage",
            filterCriteria:{},
            topvaluecount:1000,
            pagesize:100,
            pageNo:2
            
          }
        }
        ```
      tags:
        - topn-microservice
      parameters:
        - in: body
          name: metricRequest
          description: Metric request.
          schema:
            $ref: '#/definitions/topNRequest'
      responses:
        '200':
          description: Metric request served successfully
          schema:
            $ref: '#/definitions/topnresponse'
        '400':
          description: 'Bad Request, Unable to parse the metric message.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'
            
            
            
            
            
            
            
            
            
  /v1/analytics:
    post:
      summary: API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.
      description: |
        API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.
        For example:
        ```
        POST /api/topn/v1/analytics
        ```
        Sample request body will be :
        ```
          {
            metrickey:"CPU",
            startTime:12312312313,
            endTime:12312312333,
            pageSize:100,
            pageNo:0,
          }
        ```
        Sample response body will be :
        ```
        
        {
          metrickey:"cpu",
          average: 12,
          sum:2311,
          metricCount: 122,
          variance :5,
          standardDeviation:2,
          nextPage : {
            metrickey:"CPU",
            startTime:12312312313,
            endTime:12312312333,
            pageSize:100,
            pageNo:1,
          }
        }
        ```
      tags:
        - topn-microservice
      parameters:
        - in: body
          name: metricAnalyticRequest
          description: Metric Analytic request.
          schema:
            $ref: '#/definitions/metricAnalyticRequest'
      responses:
        '200':
          description: Metric request served successfully
          schema:
            $ref: '#/definitions/metricAnalyticResponse'
        '400':
          description: 'Bad Request, Unable to parse the metric message.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal server error
          schema:
            $ref: '#/definitions/Error'          
definitions:
  Metric:
    type: object
    description: An metric feed
    required:
      - metricSource
      - customerAccount
      - eventTime
      - metricsParam
      - latitude
      - longitude
      - cell
    properties:
      metricSource:
        type: string
        description: Source or internal service from which metric is pulled
      customerAccount:
        type: string
        description: service provider/customer id/Customer info used in analytical operation
      eventTime:
        type: string
        description: Notification generation time
      latitude:
        type: integer
        description: latitude where device location
      longitude:
        type: integer
        description: Longitude where device location
      cell:
        type: string
        description: Humar readable location like Bangalore, Delhi etc
      metricsParam:
        type: object
        description: JSON object it can have any mertics from device. Like usage of device, Frequent access of some site, CPU, Memory info etc But these information should adhare to standerd defined by TOP N Service  

  Metrics:
    type: object
    required:
      - metrics
    properties:
      metrics: 
        type: array
        items:
          $ref: '#/definitions/Metric'
        description: Array of Metric  

  topNRequest:
    type: object
    description: Model for TopN request API
    required:
      - metrickey
      - filterCriteria
      - topvaluecount
      - pagesize
      - pageno
    properties:
      metrickey:
        type: string
        description: "Json field on which "
      filterCriteria:
        type: object
        $ref: '#/definitions/criteria'
      topvaluecount:
        type: integer
        description: Top N count needed
      pagesize:
        type: integer
        description: page size of response
      pageno:
        type: integer
        description: page number of response

  criteria:
    type: object
    required:
      - list
      - range
      - relational
    properties:
      list: 
        type : array
        description: For example SQL IN condition query. 
        items:
          $ref: '#/definitions/filterParam'
      range: 
        type : array
        description: For SQL Between condition call.
        items:
          $ref: '#/definitions/filterParam'
      relational: 
        type : array
        description: For SQL > < <> condition call.
        items:
          $ref: '#/definitions/filterParam'

        

  filterParam:
    type: object
    description: Basic unit of filtering
    required:
      - attributeValue
      - attributeKey
      - operator
    properties:
      attributeValue:
        type: string
        description: Any JSON field to be filtered
      attributeKey:
        type: string
        description: Value with which json field to be filtered
      operator:
        type: string
        description: operators > ,< ,= ,!=, etc

  topnresponse:
    type: object
    properties:
      topNMetrics:
        type: array
        items:
            $ref: '#/definitions/topResponseValue'
      nextPage:
        type: string

  topResponseValue:
    type: object
    required:
      - metrickey
      - metricValue
    properties:
       metrickey:
        type: string
        description: JSON field on which TOP N service filtered
       metricValue:
        type: string
        description: Values in sorted order
      
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
      message:
        type: string
  metricAnalyticRequest:
    type: object
    required:
      - metrickey
      - startTime
      - endTime
      - pageSize
      - pageNo
    properties:
      metrickey:
        type: string
      startTime:
        type: string
      endTime:
        type: string
      pageSize:
        type: integer
      pageNo:
        type: integer 

        
  metricAnalyticResponse:
    type: object
    required:
      - metrickey
      - average
      - sum
      - metricCount
      - variance
      - standardDeviation
    properties:
      metrickey:
        type: string
      average:
        type: integer
      sum:
        type: integer
      metricCount:
        type: integer
      variance:
        type: integer
      standardDeviation:
        type: integer
  



 
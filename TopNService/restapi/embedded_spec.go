// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Top N microservice expose API's to collect data from various network device.It also expose API's to search/aggregate operation on metrics collected by devices in network",
    "title": "Top N Micorservice",
    "version": "1.0.0"
  },
  "basePath": "/api/topn",
  "paths": {
    "/v1/analytics": {
      "post": {
        "description": "API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nPOST /api/topn/v1/analytics\n` + "`" + `` + "`" + `` + "`" + `\nSample request body will be :\n` + "`" + `` + "`" + `` + "`" + `\n  {\n    metrickey:\"CPU\",\n    startTime:12312312313,\n    endTime:12312312333,\n    pageSize:100,\n    pageNo:0,\n  }\n` + "`" + `` + "`" + `` + "`" + `\nSample response body will be :\n` + "`" + `` + "`" + `` + "`" + `\n\n{\n  metrickey:\"cpu\",\n  average: 12,\n  sum:2311,\n  metricCount: 122,\n  variance :5,\n  standardDeviation:2,\n  nextPage : {\n    metrickey:\"CPU\",\n    startTime:12312312313,\n    endTime:12312312333,\n    pageSize:100,\n    pageNo:1,\n  }\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "tags": [
          "topn-microservice"
        ],
        "summary": "API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.",
        "parameters": [
          {
            "description": "Metric Analytic request.",
            "name": "metricAnalyticRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/metricAnalyticRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric request served successfully",
            "schema": {
              "$ref": "#/definitions/metricAnalyticResponse"
            }
          },
          "400": {
            "description": "Bad Request, Unable to parse the metric message.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/gettopn": {
      "post": {
        "description": "To fetch TOP N devices based on query parameter on any parameter of metrics. Metrics can be sorted on any JSON field. Multi column/field sorting also enabled. For example get Top N device type in some geo location. Top device type from some customer account etc\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nPOST /api/topn/v1/gettopn\n` + "`" + `` + "`" + `` + "`" + `\nSample request body will be :\n` + "`" + `` + "`" + `` + "`" + `\n  {\n    metrickey:\"devicetype\",\n    metricValue:\"printer\",\n    topValueCount:1000,\n    pageSize:100,\n  }\n` + "`" + `` + "`" + `` + "`" + `\nSample response body will be :\n` + "`" + `` + "`" + `` + "`" + `\n\n{\n  topNMetrics :[\n      {\n    metrickey:\"devicetype\",\n    metricValue:\"printer\",\n    topValueCount:1000,\n    pageSize:100,\n    pagenumber:0,\n  }\n    ],\n  nextPage :{\n    metrickey :\"devicetype\",\n    metricvalue:\"printer\",\n    topvaluecount:1000,\n    pagesize:1\n  }\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "tags": [
          "topn-microservice"
        ],
        "summary": "To fetch TOP N devices based on query parameter on any parameter of metrics.",
        "parameters": [
          {
            "description": "Metric request.",
            "name": "metricRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/metricRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric request served successfully",
            "schema": {
              "$ref": "#/definitions/topnresponse"
            }
          },
          "400": {
            "description": "Bad Request, Unable to parse the metric message.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/pushmetrics": {
      "put": {
        "description": "Devices present in network push the metric to top N service.Device can have client side application running which will put metrics to server.\n\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nput /api/topn/v1/pushmetrics\n` + "`" + `` + "`" + `` + "`" + `\n\nmetric content:\n` + "`" + `` + "`" + `` + "`" + `\n  {\n      \"deviceType\": \"Jphone\",\n      \"customerAccount\": \"TTL USA\"\n      \"notificationTime\": \"1212312312313123\"\n      \"metrics\":{\n        \"metric1\":\"a\",\n        \"metric2\":\"b\",\n        \n      }\n      ...\n      ...\n  }\n` + "`" + `` + "`" + `` + "`" + `\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "topn-microservice"
        ],
        "summary": "used by device upload the metric/feed",
        "parameters": [
          {
            "description": "Metrics from device",
            "name": "devicemetrics",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Metric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric uploaded to top N service.",
            "schema": {
              "$ref": "#/definitions/MetricResponse"
            }
          },
          "404": {
            "description": "Top N Service not reachable.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error (e.g. lost database connection)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Metric": {
      "description": "An metric feed",
      "type": "object",
      "required": [
        "deviceType",
        "customerAccount",
        "notificationTime",
        "metrics"
      ],
      "properties": {
        "customerAccount": {
          "description": "service provider/customer id",
          "type": "string"
        },
        "deviceType": {
          "description": "Device type from which feed/metric came",
          "type": "string"
        },
        "metrics": {
          "description": "JSON object it can have any mertics from device. Like usage of device, Frequent access of some site, CPU, Memory info etc But these information should adhare to standerd defined by TOP N Service",
          "type": "object"
        },
        "notificationTime": {
          "description": "Notification generation time",
          "type": "string"
        }
      }
    },
    "MetricResponse": {
      "description": "Response of metrics",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "Status message from server.",
          "type": "string"
        }
      }
    },
    "metricAnalyticRequest": {
      "type": "object",
      "required": [
        "metrickey",
        "startTime",
        "endTime",
        "pageSize",
        "pageNo"
      ],
      "properties": {
        "endTime": {
          "type": "string"
        },
        "metrickey": {
          "type": "string"
        },
        "pageNo": {
          "type": "integer"
        },
        "pageSize": {
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "metricAnalyticResponse": {
      "type": "object",
      "required": [
        "metrickey",
        "average",
        "sum",
        "metricCount",
        "variance",
        "standardDeviation"
      ],
      "properties": {
        "average": {
          "type": "integer"
        },
        "metricCount": {
          "type": "integer"
        },
        "metrickey": {
          "type": "string"
        },
        "standardDeviation": {
          "type": "integer"
        },
        "sum": {
          "type": "integer"
        },
        "variance": {
          "type": "integer"
        }
      }
    },
    "metricRequest": {
      "type": "object",
      "properties": {
        "metrickey": {
          "type": "string"
        },
        "metricvalue": {
          "type": "string"
        },
        "pageno": {
          "type": "integer"
        },
        "pagesize": {
          "type": "integer"
        },
        "topvaluecount": {
          "type": "integer"
        }
      }
    },
    "topnresponse": {
      "type": "object",
      "properties": {
        "nextPage": {
          "type": "object",
          "$ref": "#/definitions/metricRequest"
        },
        "topNMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Top N microservice expose API's to collect data from various network device.It also expose API's to search/aggregate operation on metrics collected by devices in network",
    "title": "Top N Micorservice",
    "version": "1.0.0"
  },
  "basePath": "/api/topn",
  "paths": {
    "/v1/analytics": {
      "post": {
        "description": "API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nPOST /api/topn/v1/analytics\n` + "`" + `` + "`" + `` + "`" + `\nSample request body will be :\n` + "`" + `` + "`" + `` + "`" + `\n  {\n    metrickey:\"CPU\",\n    startTime:12312312313,\n    endTime:12312312333,\n    pageSize:100,\n    pageNo:0,\n  }\n` + "`" + `` + "`" + `` + "`" + `\nSample response body will be :\n` + "`" + `` + "`" + `` + "`" + `\n\n{\n  metrickey:\"cpu\",\n  average: 12,\n  sum:2311,\n  metricCount: 122,\n  variance :5,\n  standardDeviation:2,\n  nextPage : {\n    metrickey:\"CPU\",\n    startTime:12312312313,\n    endTime:12312312333,\n    pageSize:100,\n    pageNo:1,\n  }\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "tags": [
          "topn-microservice"
        ],
        "summary": "API to do statistical operation on metrics data.It includes getting average of some metrics over last x time interval. Similarly sum, mean, median etc of metrics based on some metric parameter. NOTE- statiscal operation can be done only on number or date fields on other fields operation fail with error.",
        "parameters": [
          {
            "description": "Metric Analytic request.",
            "name": "metricAnalyticRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/metricAnalyticRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric request served successfully",
            "schema": {
              "$ref": "#/definitions/metricAnalyticResponse"
            }
          },
          "400": {
            "description": "Bad Request, Unable to parse the metric message.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/gettopn": {
      "post": {
        "description": "To fetch TOP N devices based on query parameter on any parameter of metrics. Metrics can be sorted on any JSON field. Multi column/field sorting also enabled. For example get Top N device type in some geo location. Top device type from some customer account etc\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nPOST /api/topn/v1/gettopn\n` + "`" + `` + "`" + `` + "`" + `\nSample request body will be :\n` + "`" + `` + "`" + `` + "`" + `\n  {\n    metrickey:\"devicetype\",\n    metricValue:\"printer\",\n    topValueCount:1000,\n    pageSize:100,\n  }\n` + "`" + `` + "`" + `` + "`" + `\nSample response body will be :\n` + "`" + `` + "`" + `` + "`" + `\n\n{\n  topNMetrics :[\n      {\n    metrickey:\"devicetype\",\n    metricValue:\"printer\",\n    topValueCount:1000,\n    pageSize:100,\n    pagenumber:0,\n  }\n    ],\n  nextPage :{\n    metrickey :\"devicetype\",\n    metricvalue:\"printer\",\n    topvaluecount:1000,\n    pagesize:1\n  }\n}\n` + "`" + `` + "`" + `` + "`" + `\n",
        "tags": [
          "topn-microservice"
        ],
        "summary": "To fetch TOP N devices based on query parameter on any parameter of metrics.",
        "parameters": [
          {
            "description": "Metric request.",
            "name": "metricRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/metricRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric request served successfully",
            "schema": {
              "$ref": "#/definitions/topnresponse"
            }
          },
          "400": {
            "description": "Bad Request, Unable to parse the metric message.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/v1/pushmetrics": {
      "put": {
        "description": "Devices present in network push the metric to top N service.Device can have client side application running which will put metrics to server.\n\nFor example:\n` + "`" + `` + "`" + `` + "`" + `\nput /api/topn/v1/pushmetrics\n` + "`" + `` + "`" + `` + "`" + `\n\nmetric content:\n` + "`" + `` + "`" + `` + "`" + `\n  {\n      \"deviceType\": \"Jphone\",\n      \"customerAccount\": \"TTL USA\"\n      \"notificationTime\": \"1212312312313123\"\n      \"metrics\":{\n        \"metric1\":\"a\",\n        \"metric2\":\"b\",\n        \n      }\n      ...\n      ...\n  }\n` + "`" + `` + "`" + `` + "`" + `\n",
        "produces": [
          "application/json"
        ],
        "tags": [
          "topn-microservice"
        ],
        "summary": "used by device upload the metric/feed",
        "parameters": [
          {
            "description": "Metrics from device",
            "name": "devicemetrics",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Metric"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metric uploaded to top N service.",
            "schema": {
              "$ref": "#/definitions/MetricResponse"
            }
          },
          "404": {
            "description": "Top N Service not reachable.",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error (e.g. lost database connection)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Metric": {
      "description": "An metric feed",
      "type": "object",
      "required": [
        "deviceType",
        "customerAccount",
        "notificationTime",
        "metrics"
      ],
      "properties": {
        "customerAccount": {
          "description": "service provider/customer id",
          "type": "string"
        },
        "deviceType": {
          "description": "Device type from which feed/metric came",
          "type": "string"
        },
        "metrics": {
          "description": "JSON object it can have any mertics from device. Like usage of device, Frequent access of some site, CPU, Memory info etc But these information should adhare to standerd defined by TOP N Service",
          "type": "object"
        },
        "notificationTime": {
          "description": "Notification generation time",
          "type": "string"
        }
      }
    },
    "MetricResponse": {
      "description": "Response of metrics",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "description": "Status message from server.",
          "type": "string"
        }
      }
    },
    "metricAnalyticRequest": {
      "type": "object",
      "required": [
        "metrickey",
        "startTime",
        "endTime",
        "pageSize",
        "pageNo"
      ],
      "properties": {
        "endTime": {
          "type": "string"
        },
        "metrickey": {
          "type": "string"
        },
        "pageNo": {
          "type": "integer"
        },
        "pageSize": {
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "metricAnalyticResponse": {
      "type": "object",
      "required": [
        "metrickey",
        "average",
        "sum",
        "metricCount",
        "variance",
        "standardDeviation"
      ],
      "properties": {
        "average": {
          "type": "integer"
        },
        "metricCount": {
          "type": "integer"
        },
        "metrickey": {
          "type": "string"
        },
        "standardDeviation": {
          "type": "integer"
        },
        "sum": {
          "type": "integer"
        },
        "variance": {
          "type": "integer"
        }
      }
    },
    "metricRequest": {
      "type": "object",
      "properties": {
        "metrickey": {
          "type": "string"
        },
        "metricvalue": {
          "type": "string"
        },
        "pageno": {
          "type": "integer"
        },
        "pagesize": {
          "type": "integer"
        },
        "topvaluecount": {
          "type": "integer"
        }
      }
    },
    "topnresponse": {
      "type": "object",
      "properties": {
        "nextPage": {
          "type": "object",
          "$ref": "#/definitions/metricRequest"
        },
        "topNMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metric"
          }
        }
      }
    }
  }
}`))
}
